package org.pvv.larschri.rubik;

import java.util.List;

public class CubeHeuristic {

    private final static PairLookup PAIR_LOOKUP = new PairLookup(false);

    private static class PairLookup {

        private final int[][][] lookup;

        PairLookup(boolean compute) {
            lookup = compute ? compute() : fromSerializedString();
        }

        /**
         * Constructs a lookup array where array[color][corner][edge] is an integer
         * 0-6 which represents the number of moves it takes to move the corner
         * facelet with the given 'color' to the position given by 'corner' and the
         * edge facelet with the given 'color' to the position given by 'edge'.
         */
        private static int[][][] compute() {
            int[][][] lookup = new int[24][24][24];
            // Maximum is 6, and it's much more feasible to initialize it here
            // than attempt to traverse another level with CubeTraverser.
            for (int i = 0; i < lookup.length; i++) {
                for (int j = 0; j < lookup[i].length; j++) {
                    for (int k = 0; k < lookup[i][j].length; k++) {
                        lookup[i][j][k] = 6;
                    }
                }
            }

            List<List<Cube>> results = CubeTraverser.traverse(Cubes.SOLVED, 6);
            for (int level = results.size() - 1; level >= 0; level--) {
                for (Cube cube : results.get(level)) {
                    Cube inv = cube.inverse();
                    List<Integer> corners = inv.getCorners();
                    List<Integer> edges = inv.getEdges();
                    for (int i = 0; i < 24; i++) {
                        lookup[i][corners.get(i)][edges.get(i)] = level;
                    }
                }
            }

            return lookup;
        }

        static int[][][] fromSerializedString() {
            String s
            int[][][] lookup = new int[24][24][24];
            int charPos = 0;
            for (int i = 0; i < lookup.length; i++) {
                for (int j = 0; j < lookup[i].length; j++) {
                    for (int k = 0; k < lookup[i][j].length; k++) {
                        lookup[i][j][k] = s.charAt(charPos++) - '0';
                    }
                }
            }
            return lookup;
        }

        public String asSerializedString() {
            StringBuilder sb = new StringBuilder();
            for (int i = 0; i < lookup.length; i++) {
                for (int j = 0; j < lookup[i].length; j++) {
                    for (int k = 0; k < lookup[i][j].length; k++) {
                        sb.append(lookup[i][j][k]);
                    }
                }
            }
            return sb.toString();
        }

        int[] analyze(Cube c) {
            Cube inv = c.inverse();
            List<Integer> corners = inv.getCorners();
            List<Integer> edges = inv.getEdges();
            int[] result = new int[24];
            for (int i = 0; i < result.length; i++) {
                result[i] = lookup[i][corners.get(i)][edges.get(i)];
            }
            return result;
        }
    }

    /**
     * Convert the given cube to a number that is low for organized cubes and
     * higher for more chaotic cubes.
     */
    static int calcHeuristic(Cube cube) {
        int[] analyze = PAIR_LOOKUP.analyze(cube);
        int[] counts = new int[7];
        for (int j = 0; j < analyze.length; j++) {
            counts[analyze[j]]++;
        }
        int result = 0;
        int[] multipliers = new int[] {0, 1, 10, 100, 200, 200, 200};
        for (int i = 0; i < counts.length; i++) {
            result += counts[i] * multipliers[i];
        }
        return result;
    }

    public static void main(String[] args) {
        System.out.println(new PairLookup(true).asSerializedString().equals(PAIR_LOOKUP.asSerializedString()));
    }
}